{"version":3,"sources":["utils.js","pages/simulation/function-graph.jsx","pages/simulation/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["derive","input","derivative","toString","error","buildZone","func","left","right","result","compile","evaluate","value","x","from","text","to","direction","type","re","first","last","valueFrom","parseFloat","toFixed","valueTo","imaginaryFrom","String","includes","imaginaryTo","realFromImaginaryResult","undefined","sortSolutions","a","b","lt","gt","FunctionPlot","zones","dots","rootEl","useRef","fasesEl","xvstEl","points","map","fnType","graphType","color","options","grid","width","height","data","fn","updateOnMouseMove","arrows","vector","offset","fases","yAxis","domain","xAxis","label","xvstDots","trayectorias","forEach","push","Number","concat","range","between","Math","abs","middlePont","getTrayectorias","xvst","zoom","annotations","name","y","useEffect","console","log","functionPlot","Object","assign","target","current","addLink","e","title","bordered","style","marginTop","ref","className","addStyles","Header","Layout","Content","Footer","pages","id","component","useState","setInput","show","setShow","roots","solutions","nerdamer","solveEquations","sort","item","getRoot","reverse","length","firstRoot","index","getZones","cleanDots","dot","getCleanDots","root","icon","DoubleLeftOutlined","DoubleRightOutlined","styles","i","ArrowsAltOutlined","ShrinkOutlined","dotTypes","cleanZones","cleaned","next","zone","getCleanZones","Search","placeholder","allowClear","defaultValue","enterButton","prefix","size","onChange","onSearch","gutter","span","Provider","Node","inline","formula","CaretLeftOutlined","CaretRightOutlined","App","selected","Component","background","padding","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cacb8f08.chunk.js","sourcesContent":["import { derivative, compile, evaluate } from 'mathjs'\nimport nerdamer from'nerdamer/nerdamer.core.js'\nimport 'nerdamer/Algebra.js'\nimport 'nerdamer/Calculus.js'\nimport 'nerdamer/Solve.js'\n\nimport { DoubleLeftOutlined, DoubleRightOutlined, ShrinkOutlined, ArrowsAltOutlined } from '@ant-design/icons';\n\nexport const derive = (input) => {\n  try {\n    return derivative(input, 'x').toString();\n  } catch (error) {\n    return input;\n  }\n}\n\nexport const getRoot = (input) => {\n  try {\n    const solutions = nerdamer.solveEquations(input, 'x');\n    solutions.sort(sortSolutions);\n    return solutions.map(item => item.text());\n  } catch (error) {\n    console.log(error)\n    return [];\n  }\n}\n\nexport const toEquation = (input) => {\n  try {\n    const cleaned = input.replace(/\\*/, '\\\\cdot').replace(/sqrt/, '\\\\sqrt');\n    return cleaned;\n  } catch (error) {\n    console.log(error)\n    return input;\n  }\n}\n\nconst buildZone = (func, input, left, right) => {\n  const result = compile(input).evaluate();\n  const value = func.evaluate({x: result});\n\n  return {\n    from: left == null ? '-∞' : left.text(),\n    to: right == null ? '+∞' : right.text(),\n    direction: (result.type === 'Complex' && result.re >= 0 || value >= 0) ? 'right' : 'left',\n    value,\n    result,\n    first: left == null,\n    last: right == null,\n    valueFrom: left == null ? '-∞' : parseFloat(evaluate(left.text())).toFixed(2),\n    valueTo: right == null ? '+∞' : parseFloat(evaluate(right.text())).toFixed(2),\n    imaginaryFrom: left != null && String(left.text()).includes('i'),\n    imaginaryTo: right != null && String(right.text()).includes('i'),\n    realFromImaginaryResult: result.type === 'Complex' ? result.re : undefined\n  };\n}\n\nconst sortSolutions = (a, b) => {\n  if (a.lt(b)) {\n    return -1;\n  }\n  if (a.gt(b)) {\n    return 1;\n  }\n  return 0;\n}\n\n// Zonas\nexport const getZones = (input) => {\n  try {\n    const solutions = nerdamer.solveEquations(input, 'x').reverse();\n    solutions.sort(sortSolutions);\n    const func = compile(input);\n    const zones = [];\n    if (solutions.length > 0) {\n      const [firstRoot] = solutions;\n      zones.push(buildZone(func, `${firstRoot}-1`, null, firstRoot));\n\n      console.log(zones);\n\n      for (let index = 0; index < solutions.length; index++) {\n        const left = solutions[index];\n        const right = solutions[index+1];\n\n        if (right == null) {\n          zones.push(buildZone(func, `${left} + 1`, left));\n        } else {\n          zones.push(buildZone(func, `(${left} + ${right}) / 2`, left, right));\n        }\n        console.log(zones);\n      };\n    }\n\n    return zones;\n  } catch (error) {\n    console.log(error)\n    return [];\n  }\n}\n\nexport const getCleanZones = (zones) => {\n  var cleaned = [];\n  var up;\n  var data;\n  var next = false;\n\n  zones.forEach(zone => {\n    if (next) {\n      if (!zone.imaginaryTo) {\n        // vengo de un nodo abierto y mi sig no es imaginario\n        data.direction = zone.direction;\n        data.valueTo = zone.valueTo;\n        data.to = zone.to;\n        cleaned.push(data);\n        data = undefined;\n        next = false;\n      }\n    } else {\n      data = zone;\n      if (zone.imaginaryTo) {\n        next = true;\n      } else {\n        cleaned.push(data);\n        data = undefined;\n      }\n    }\n    \n    // datos del final\n    if (data != undefined && zone.valueTo === '+∞') {\n      if (next) {\n        data.valueTo = '+∞';\n        next = false;\n        cleaned.push(data);\n      }\n    }\n  });\n  console.log('Clean Zones');\n  console.log(cleaned);\n  return cleaned;\n}\n\n// Puntos de equilibrio\nexport const dotTypes = (roots, zones) => {\n  try {\n    return roots.map((root, index) => {\n\n      const left = zones[index].direction;\n      const right = zones[index+1].direction;\n      \n      if (!zones[index].imaginaryTo) {\n        if (left === right) {\n          console.log('Generar Inestable---------------');\n          return {\n            value: zones[index].valueTo,\n            type: 'Inestable',\n            icon: left === 'left' ? <DoubleLeftOutlined /> : <DoubleRightOutlined />,\n            color: '#FFA500',\n            name: `X${index+1}*`,\n            styles: 'badge badge-inestable',\n            i: index\n          }\n        } else if (left === 'left') {\n          console.log('Generar Repulsor---------------');\n          return {\n            value: zones[index].valueTo,\n            type: 'Repulsor',\n            icon: <ArrowsAltOutlined />,\n            color: '#f5222d',\n            name: `X${index+1}*`,\n            styles: 'badge badge-repulsor',\n            i: index\n          }\n        } else {\n          console.log('Generar Atractor---------------');\n          return {\n            value: zones[index].valueTo,\n            type: 'Atractor',\n            icon: <ShrinkOutlined />,\n            color: '#52c41a',\n            name: `X${index+1}*`,\n            styles: 'badge badge-atractor',\n            i: index\n          }\n        }\n      }\n    })\n  } catch (error) {\n    return [];\n  }\n}\n\nexport const getCleanDots = (dots) => {\n  var cleanDots = [];\n  dots.forEach(dot => {\n    if (dot !== undefined) {\n      cleanDots.push(dot);\n    }\n  });\n  return cleanDots;\n}\n\n// Diagrama X vs T\nexport const getTrayectorias = (zones) => {\n  const data = [];\n\n  zones.forEach(({ first, last, direction, valueFrom, valueTo, realFromImaginaryResult }) => {\n    if (first) {\n      if (direction === 'left') {\n        // seccion de abajo - Hacia abajo\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueTo)-0.5).concat('-exp(x)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-4,4]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueTo)-0.5).concat('-exp(x-4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [0,8]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueTo)-0.5).concat('-exp(x+4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-8,0]\n        });\n      } else {\n        // seccion de abajo - Hacia arriba\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueTo)-3).concat('+sqrt(x)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-4,4]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueTo)-3).concat('+sqrt(x-4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [0,8]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueTo)-3).concat('+sqrt(x+4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-8,0]\n        });\n      }\n    } else if (last) {\n      if (direction === 'left') {\n        // seccion de arriba - Hacia abajo\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueFrom)+3).concat('-sqrt(x)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-4,4]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueFrom)+3).concat('-sqrt(x-4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [0,8]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueFrom)+3).concat('-sqrt(x+4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-8,0]\n        });\n      } else {\n        // seccion de arriba - Hacia arriba\n        data.push({\n            fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueFrom)+0.5).concat('+exp(x)'),\n            graphType: 'polyline',\n            color: '#1890ff',\n            range: [-4,4]\n          });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueFrom)+0.5).concat('+exp(x-4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [0,8]\n        });\n        data.push({\n          fn: String(Number(realFromImaginaryResult ? realFromImaginaryResult : valueFrom)+0.5).concat('+exp(x+4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-8,0]\n        });\n      }\n    } else {\n      var between = Math.abs((Number(valueFrom)-Number(valueTo)));\n      var middlePont = (Number(valueFrom)+Number(valueTo))/2;\n      if (direction === 'left') {\n        // intermedia - Hacia abajo\n        data.push({\n          fn: String(middlePont).concat('-').concat('1/'+(between<=1?5:(between<=1.5?3:(between<=2.5?2.5:(between<=3?2:1))))).concat('cbrt(x)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-4,4]\n        })\n        data.push({\n          fn: String(middlePont).concat('-').concat('1/'+(between<=1?5:(between<=1.5?3:(between<=2.5?2.5:(between<=3?2:1))))).concat('cbrt(x-4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [0,8]\n        })\n        data.push({\n          fn: String(middlePont).concat('-').concat('1/'+(between<=1?5:(between<=1.5?3:(between<=2.5?2.5:(between<=3?2:1))))).concat('cbrt(x+4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-8,0]\n        })\n      } else {\n        // intermedia - Hacia abajo\n        data.push({\n          fn: String(middlePont).concat('+').concat('1/'+(between<=1?5:(between<=1.5?3:(between<=2.5?2.5:(between<=3?2:1))))).concat('cbrt(x)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-4,4]\n        });\n        data.push({\n          fn: String(middlePont).concat('+').concat('1/'+(between<=1?5:(between<=1.5?3:(between<=2.5?2.5:(between<=3?2:1))))).concat('cbrt(x-4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [0,8]\n        });\n        data.push({\n          fn: String(middlePont).concat('+').concat('1/'+(between<=1?5:(between<=1.5?3:(between<=2.5?2.5:(between<=3?2:1))))).concat('cbrt(x+4)'),\n          graphType: 'polyline',\n          color: '#1890ff',\n          range: [-8,0]\n        });\n      }\n    }\n  })\n  return data;\n}","import React, { Fragment, useEffect, useRef } from 'react'\nimport { Card } from 'antd';\nimport functionPlot from 'function-plot'\nimport { derive, getTrayectorias } from '../../utils';\n\nimport './styles.scss';\n\nexport const FunctionPlot = ({ input, zones, dots }) => {\n  const rootEl = useRef(null);\n  const fasesEl = useRef(null);\n  const xvstEl = useRef(null);\n\n  const points = dots.map(({ value, color }) => {\n    return {\n      points: [\n        [value, 0]\n      ],\n      fnType: 'points',\n      graphType: 'scatter',\n      color,\n    };\n  });\n\n  const options = {\n    grid: true,\n    width: 1100,\n    height: 600,\n    data: [\n      {\n        fn: input,\n        derivative: {\n          fn: derive(input),\n          updateOnMouseMove: true\n        }\n      }, ...points\n    ]\n  };\n  // Array.prototype.push.apply(options.data, points);\n\n  const arrows = zones.map(({ result, direction, realFromImaginaryResult }) => {\n    const vector = direction === 'left' ? -0.3 : 0.3;\n    return {\n      vector: [vector, 0],\n      offset: [(result.type === 'Complex' ? realFromImaginaryResult : result), 0],\n      graphType: 'polyline',\n      fnType: 'vector'\n    }\n  })\n\n  const fases = {\n    width: 1100,\n    height: 200,\n    yAxis: {\n      domain: [-1, 1],\n    },\n    xAxis: {\n      label: 'X',\n    },\n    data: [...points, ...arrows],\n  };\n\n  const xvstDots = dots.map(({ value, color }) => {\n    return {\n      fn: `y = ${value}`,\n      text: 'y = 1',\n      color\n    };\n  });\n\n  const trayectorias = getTrayectorias(zones);\n\n  const xvst = {\n    width: 1100,\n    height: 500,\n    zoom: true,\n    xAxis: {\n      label: 't'\n    },\n    yAxis: {\n      label: 'x(t)'\n    },\n    annotations: dots.map(({ value, name, type }) => {\n      return {\n        y: value,\n        text: `${name} = ${parseFloat(value).toFixed(2)} (${type})`,\n        color: '#eeeeee'\n      };\n    }),\n    data: [...xvstDots, ...trayectorias],\n  };\n\n  useEffect(() => {\n    try {\n      console.log('Obtejos para gráficos:');\n      console.log(points);\n      console.log(options);\n      console.log(fases);\n      console.log(xvst);\n      const a = functionPlot(Object.assign({}, options, { target: rootEl.current }));\n      const b = functionPlot(Object.assign({}, fases, { target: fasesEl.current }));\n      const c = functionPlot(Object.assign({}, xvst, { target: xvstEl.current }));\n      a.addLink(b);\n    } catch (e) {}\n  }, [input])\n\n  return (\n    <Fragment>\n      <Card title=\"Gráfico de la función\" bordered={true} style={{ marginTop: 20 }}>\n        <div ref={rootEl} />\n      </Card>\n      <Card title=\"Diagrama de fases\" bordered={true} style={{ marginTop: 20 }}>\n        <div className=\"fases\" ref={fasesEl} />\n      </Card>\n      <Card title=\"Diagrama X vs. T\" bordered={true} style={{ marginTop: 20 }}>\n        <div className=\"xvst\" ref={xvstEl} />\n      </Card>\n    </Fragment>\n  )\n};\n","import { CaretLeftOutlined, CaretRightOutlined } from '@ant-design/icons';\nimport { Card, Col, Input, Row } from 'antd';\nimport { Fragment, useState } from 'react';\nimport { addStyles } from \"react-mathquill\";\nimport { dotTypes, getCleanDots, getRoot, getZones, getCleanZones } from '../../utils';\nimport { FunctionPlot } from \"../simulation/function-graph\";\nimport MathJax from 'react-mathjax';\n\naddStyles();\n\nexport const SimulationPage = () => {\n  const [input, setInput] = useState('2x^2-4');\n  const [show, setShow] = useState(true);\n  // al obtener el input, se manda a calcular la funcion\n  const roots = getRoot(input);\n  // const derivative = derive(input);\n  const zones = getZones(input);\n  const dots = dotTypes(roots, zones);\n  const cleanDots = getCleanDots(dots);\n  const cleanZones = getCleanZones(zones);\n\n  return (\n    <div>\n      <Input.Search\n        placeholder=\"Ingrese una función\"\n        allowClear\n        defaultValue=\"2x^2-4\"\n        enterButton=\"Calcular\"\n        prefix=\"f(x) = \"\n        size=\"large\"\n        onChange={() => setShow(false)}\n        onSearch={(value) => {\n          setInput(value);\n          setShow(true);\n        }}\n      />\n      {show && (\n        <Fragment>\n          <Row gutter={16}>\n            <Col span={12}>\n              <Card title=\"Sistema Dinámico - 1D\" bordered={true} style={{ marginTop: 20 }}>\n                <MathJax.Provider>\n                  <MathJax.Node inline formula={String('\\\\dot x=f(x)=').concat(input).concat(',x(0) = x_0')} />\n                </MathJax.Provider>\n              </Card>\n            </Col>\n            \n            <Col span={6}>\n              <Card title=\"Puntos de equilibrio\" bordered={true} style={{ marginTop: 20 }}>\n                {console.log('cleanDots')}\n                {console.log(cleanDots)}\n                {cleanDots.length > 0 && cleanDots.map(({ value, type, styles, icon, i }) => (\n                  <MathJax.Provider>\n                    <p>\n                      <MathJax.Node inline formula={String('x_{').concat(i+1).concat('} : ').concat(parseFloat(value).toFixed(2))} /> <div className={styles}>{icon} {type}</div>\n                    </p>\n                  </MathJax.Provider>\n                ))}\n                {cleanDots.length == 0 && <p><i>Sin puntos de equilibrio</i></p>}\n              </Card>\n            </Col>\n            <Col span={6}>\n              <Card title=\"Zonas\" bordered={true} style={{ marginTop: 20 }}>\n                <MathJax.Provider>\n                  <ul className=\"data-zones\">\n                    {cleanZones.map(function(item) {\n                      return <li>{item.direction === 'left' ? <CaretLeftOutlined style={{ color: '#f5222d'}} /> : <CaretRightOutlined style={{ color: '#52c41a'}} />} \n                              {<MathJax.Node inline formula={'('+item.valueFrom+' ; '+item.valueTo+')'} />}\n                            </li>;\n                    })}\n                  </ul>\n                </MathJax.Provider>\n              </Card>\n            </Col>\n          </Row>\n\n\n          <Row gutter={16}>\n            <Col span={24}>\n              <FunctionPlot input={input} zones={cleanZones} dots={cleanDots} />  \n            </Col>\n          </Row>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { Layout } from 'antd';\n\nimport './App.css';\n\nimport { SimulationPage } from './pages/simulation';\n\nconst { Header, Content, Footer } = Layout;\n\nconst pages = [\n  {\n    id: 1,\n    title: 'Simulación 1D',\n    component: SimulationPage,\n  }\n]\n\nconst App = () => {\n  const [selected] = useState(0);\n\n  const Component = pages[selected].component;\n\n  return (\n    <Layout className=\"ms-layout\">\n      <Header style={{ width: '100%', background: '#2c2c2c' }}>\n        <div className=\"logo\">\n          Sistemas Dinámicos 1D\n        </div>\n        <div className=\"logo logo-left\">\n          Modelado y Simulación - MaNo 1c 2021\n        </div>\n      </Header>\n      <Content style={{ padding: '0 50px'}}>\n        <div className=\"site-layout-background\" style={{ marginTop: 20, padding: 24, minHeight: 380 }}>\n          <Component />\n        </div>\n      </Content>\n      <Footer style={{ width: '100%', background: '#2c2c2c' }}>\n        Profesor: <b>Acero</b>, Fernando<br/>\n        Alumnos:\n        <ul>\n          <li><b>Alles</b>, Francisco (LU 1044380)</li>\n          <li><b>Garnero</b>, Federico (LU 1064523)</li>\n        </ul>\n      </Footer>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}